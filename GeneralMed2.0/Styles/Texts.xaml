        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GeneralMed2._0.Styles">

    
    
    
    
    
    <!-- This will be the base textblock style for the application -->
    <Style TargetType="{x:Type TextBlock}" x:Key="BaseTextBlock" BasedOn="{StaticResource BaseTextBlockFont}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!-- Base Style type for Text boxes with an underline  -->

    <ControlTemplate x:Key="UnderlineTextBox" TargetType="{x:Type TextBoxBase}">
            <Grid>
                <Border x:Name="border" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="0 0 0 2" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True"
                    VerticalAlignment="Center"
                        Padding="5">

                    <ScrollViewer x:Name="PART_ContentHost" 
                              Focusable="False" 
                              HorizontalScrollBarVisibility="Hidden" 
                              VerticalScrollBarVisibility="Hidden">
                    </ScrollViewer>
                </Border>

                <!-- In this instance we are adding a textblock within the box that will allow us to change the visibility when it is typed into -->
                <!-- We bind to tag, which is made up, and needs to be used to insert the placeholder text -->
                <TextBlock IsHitTestVisible="False"
                           Text="{TemplateBinding Tag}"
                           FontFamily="{StaticResource LatoRegular}"
                           VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

        <!-- Triggers for mouse over color changes -->
            <ControlTemplate.Triggers>
                
                <!-- This causes the underline to go green when the user mouses over -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="Transparent" Offset="0.0"/>
                                <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.25"/>
                                <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.75"/>
                                <GradientStop Color="Transparent" Offset="1.0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <!-- causes the underline to return to gray -->
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="Transparent" Offset="0.0"/>
                                <GradientStop Color="{StaticResource GrayUnderline}" Offset="0.25"/>
                                <GradientStop Color="{StaticResource GrayUnderline}" Offset="0.75"/>
                                <GradientStop Color="Transparent" Offset="1.0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>


                <!-- Causes the underline to go green when the user is typing -->
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="Transparent" Offset="0.0"/>
                                <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.25"/>
                                <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.75"/>
                                <GradientStop Color="Transparent" Offset="1.0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    
    
    <ControlTemplate x:Key="DrugSearchTextbox" TargetType="{x:Type TextBoxBase}">
        <Grid>
            <Border x:Name="border" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="0 0 0 2" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True"
                    VerticalAlignment="Center"
                    Padding="5">

                <ScrollViewer x:Name="PART_ContentHost" 
                              Focusable="False" 
                              HorizontalScrollBarVisibility="Hidden" 
                              VerticalScrollBarVisibility="Hidden">
                </ScrollViewer>
            </Border>

            <!-- In this instance we are adding a textblock within the box that will allow us to change the visibility when it is typed into -->
            <!-- We bind to tag, which is made up, and needs to be used to insert the placeholder text -->
            <TextBlock IsHitTestVisible="False"
                       Text="{TemplateBinding Tag}"
                       FontFamily="{StaticResource LatoRegular}"
                       VerticalAlignment="Center"
                       Margin="10 0 0 0">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" 
                                Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                <Setter Property="Visibility" 
                                        Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <!-- Triggers for mouse over color changes -->
        <ControlTemplate.Triggers>

            <!-- This causes the underline to go green when the user mouses over -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="Transparent" Offset="0.0"/>
                            <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.25"/>
                            <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.75"/>
                            <GradientStop Color="Transparent" Offset="1.0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- causes the underline to return to gray -->
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="Transparent" Offset="0.0"/>
                            <GradientStop Color="{StaticResource GrayUnderline}" Offset="0.25"/>
                            <GradientStop Color="{StaticResource GrayUnderline}" Offset="0.75"/>
                            <GradientStop Color="Transparent" Offset="1.0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>


            <!-- Causes the underline to go green when the user is typing -->
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="Transparent" Offset="0.0"/>
                            <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.25"/>
                            <GradientStop Color="{StaticResource GreenUnderline}" Offset="0.75"/>
                            <GradientStop Color="Transparent" Offset="1.0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate TargetType="{x:Type TextBox}" x:Key="VisibleToggleTextBox">
        <TextBlock IsHitTestVisible="False"
                       Text="{TemplateBinding Tag}"
                       FontFamily="{StaticResource LatoRegular}"
                       VerticalAlignment="Center"
                       Margin="10 0 0 0">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" 
                                Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                            <Setter Property="Visibility" 
                                        Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </ControlTemplate>

</ResourceDictionary>